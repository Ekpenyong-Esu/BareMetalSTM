
PWM.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000188  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000334  0800033c  0001033c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000334  08000334  0001033c  2**0
                  CONTENTS
  4 .ARM          00000000  08000334  08000334  0001033c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000334  0800033c  0001033c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000334  08000334  00010334  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000338  08000338  00010338  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001033c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0001033c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0001033c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000493  00000000  00000000  00010366  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000c3  00000000  00000000  000107f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  000108c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000030  00000000  00000000  00010908  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001a279  00000000  00000000  00010938  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000055b  00000000  00000000  0002abb1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00093358  00000000  00000000  0002b10c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000be464  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000054  00000000  00000000  000be4b4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000000 	.word	0x20000000
 80001c8:	00000000 	.word	0x00000000
 80001cc:	0800031c 	.word	0x0800031c

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000004 	.word	0x20000004
 80001e8:	0800031c 	.word	0x0800031c

080001ec <main>:
#include "stm32f4xx.h"

int main(void) {
 80001ec:	b480      	push	{r7}
 80001ee:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;  /* enable GPIOA clock */
 80001f0:	4b21      	ldr	r3, [pc, #132]	; (8000278 <main+0x8c>)
 80001f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001f4:	4a20      	ldr	r2, [pc, #128]	; (8000278 <main+0x8c>)
 80001f6:	f043 0301 	orr.w	r3, r3, #1
 80001fa:	6313      	str	r3, [r2, #48]	; 0x30

	GPIOA->AFR[0] &= ~GPIO_AFRL_AFSEL5;  // Clear the alternate funtion fir pin 5
 80001fc:	4b1f      	ldr	r3, [pc, #124]	; (800027c <main+0x90>)
 80001fe:	6a1b      	ldr	r3, [r3, #32]
 8000200:	4a1e      	ldr	r2, [pc, #120]	; (800027c <main+0x90>)
 8000202:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8000206:	6213      	str	r3, [r2, #32]
    GPIOA->AFR[0] |= (1UL << GPIO_AFRL_AFSEL5_Pos); // AF1 (Alternate Function 1) = 001
 8000208:	4b1c      	ldr	r3, [pc, #112]	; (800027c <main+0x90>)
 800020a:	6a1b      	ldr	r3, [r3, #32]
 800020c:	4a1b      	ldr	r2, [pc, #108]	; (800027c <main+0x90>)
 800020e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000212:	6213      	str	r3, [r2, #32]

    GPIOA->MODER &= ~GPIO_MODER_MODER5;  /* Clear mode bits for PA5 */
 8000214:	4b19      	ldr	r3, [pc, #100]	; (800027c <main+0x90>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a18      	ldr	r2, [pc, #96]	; (800027c <main+0x90>)
 800021a:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 800021e:	6013      	str	r3, [r2, #0]
    GPIOA->MODER |= GPIO_MODER_MODER5_1; /* Set PA5 to alternate function mode */
 8000220:	4b16      	ldr	r3, [pc, #88]	; (800027c <main+0x90>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a15      	ldr	r2, [pc, #84]	; (800027c <main+0x90>)
 8000226:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800022a:	6013      	str	r3, [r2, #0]

    /* Setup TIM2 */
    RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;  /* enable TIM2 clock */
 800022c:	4b12      	ldr	r3, [pc, #72]	; (8000278 <main+0x8c>)
 800022e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000230:	4a11      	ldr	r2, [pc, #68]	; (8000278 <main+0x8c>)
 8000232:	f043 0301 	orr.w	r3, r3, #1
 8000236:	6413      	str	r3, [r2, #64]	; 0x40
    TIM2->PSC = 16;                  /* divided by 16 */
 8000238:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800023c:	2210      	movs	r2, #16
 800023e:	629a      	str	r2, [r3, #40]	; 0x28
    TIM2->ARR = 1000 - 1;               /* divided by 1000000/1000 to run at 1KHz */
 8000240:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000244:	f240 32e7 	movw	r2, #999	; 0x3e7
 8000248:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CNT = 0;
 800024a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800024e:	2200      	movs	r2, #0
 8000250:	625a      	str	r2, [r3, #36]	; 0x24
    TIM2->CCMR1 = TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1; /* PWM mode 1 */
 8000252:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000256:	2260      	movs	r2, #96	; 0x60
 8000258:	619a      	str	r2, [r3, #24]
    TIM2->CCER = TIM_CCER_CC1E;          /* enable PWM Ch1 */
 800025a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800025e:	2201      	movs	r2, #1
 8000260:	621a      	str	r2, [r3, #32]
    TIM2->CCR1 = 333;               /* pulse width 33.3 percent of the period */
 8000262:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000266:	f240 124d 	movw	r2, #333	; 0x14d
 800026a:	635a      	str	r2, [r3, #52]	; 0x34
    TIM2->CR1 = TIM_CR1_CEN;             /* enable timer */
 800026c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000270:	2201      	movs	r2, #1
 8000272:	601a      	str	r2, [r3, #0]

    while(1) {
 8000274:	e7fe      	b.n	8000274 <main+0x88>
 8000276:	bf00      	nop
 8000278:	40023800 	.word	0x40023800
 800027c:	40020000 	.word	0x40020000

08000280 <Reset_Handler>:
 8000280:	480d      	ldr	r0, [pc, #52]	; (80002b8 <LoopForever+0x2>)
 8000282:	4685      	mov	sp, r0
 8000284:	f3af 8000 	nop.w
 8000288:	480c      	ldr	r0, [pc, #48]	; (80002bc <LoopForever+0x6>)
 800028a:	490d      	ldr	r1, [pc, #52]	; (80002c0 <LoopForever+0xa>)
 800028c:	4a0d      	ldr	r2, [pc, #52]	; (80002c4 <LoopForever+0xe>)
 800028e:	2300      	movs	r3, #0
 8000290:	e002      	b.n	8000298 <LoopCopyDataInit>

08000292 <CopyDataInit>:
 8000292:	58d4      	ldr	r4, [r2, r3]
 8000294:	50c4      	str	r4, [r0, r3]
 8000296:	3304      	adds	r3, #4

08000298 <LoopCopyDataInit>:
 8000298:	18c4      	adds	r4, r0, r3
 800029a:	428c      	cmp	r4, r1
 800029c:	d3f9      	bcc.n	8000292 <CopyDataInit>
 800029e:	4a0a      	ldr	r2, [pc, #40]	; (80002c8 <LoopForever+0x12>)
 80002a0:	4c0a      	ldr	r4, [pc, #40]	; (80002cc <LoopForever+0x16>)
 80002a2:	2300      	movs	r3, #0
 80002a4:	e001      	b.n	80002aa <LoopFillZerobss>

080002a6 <FillZerobss>:
 80002a6:	6013      	str	r3, [r2, #0]
 80002a8:	3204      	adds	r2, #4

080002aa <LoopFillZerobss>:
 80002aa:	42a2      	cmp	r2, r4
 80002ac:	d3fb      	bcc.n	80002a6 <FillZerobss>
 80002ae:	f000 f811 	bl	80002d4 <__libc_init_array>
 80002b2:	f7ff ff9b 	bl	80001ec <main>

080002b6 <LoopForever>:
 80002b6:	e7fe      	b.n	80002b6 <LoopForever>
 80002b8:	20030000 	.word	0x20030000
 80002bc:	20000000 	.word	0x20000000
 80002c0:	20000000 	.word	0x20000000
 80002c4:	0800033c 	.word	0x0800033c
 80002c8:	20000000 	.word	0x20000000
 80002cc:	2000001c 	.word	0x2000001c

080002d0 <ADC_IRQHandler>:
 80002d0:	e7fe      	b.n	80002d0 <ADC_IRQHandler>
	...

080002d4 <__libc_init_array>:
 80002d4:	b570      	push	{r4, r5, r6, lr}
 80002d6:	4d0d      	ldr	r5, [pc, #52]	; (800030c <__libc_init_array+0x38>)
 80002d8:	4c0d      	ldr	r4, [pc, #52]	; (8000310 <__libc_init_array+0x3c>)
 80002da:	1b64      	subs	r4, r4, r5
 80002dc:	10a4      	asrs	r4, r4, #2
 80002de:	2600      	movs	r6, #0
 80002e0:	42a6      	cmp	r6, r4
 80002e2:	d109      	bne.n	80002f8 <__libc_init_array+0x24>
 80002e4:	4d0b      	ldr	r5, [pc, #44]	; (8000314 <__libc_init_array+0x40>)
 80002e6:	4c0c      	ldr	r4, [pc, #48]	; (8000318 <__libc_init_array+0x44>)
 80002e8:	f000 f818 	bl	800031c <_init>
 80002ec:	1b64      	subs	r4, r4, r5
 80002ee:	10a4      	asrs	r4, r4, #2
 80002f0:	2600      	movs	r6, #0
 80002f2:	42a6      	cmp	r6, r4
 80002f4:	d105      	bne.n	8000302 <__libc_init_array+0x2e>
 80002f6:	bd70      	pop	{r4, r5, r6, pc}
 80002f8:	f855 3b04 	ldr.w	r3, [r5], #4
 80002fc:	4798      	blx	r3
 80002fe:	3601      	adds	r6, #1
 8000300:	e7ee      	b.n	80002e0 <__libc_init_array+0xc>
 8000302:	f855 3b04 	ldr.w	r3, [r5], #4
 8000306:	4798      	blx	r3
 8000308:	3601      	adds	r6, #1
 800030a:	e7f2      	b.n	80002f2 <__libc_init_array+0x1e>
 800030c:	08000334 	.word	0x08000334
 8000310:	08000334 	.word	0x08000334
 8000314:	08000334 	.word	0x08000334
 8000318:	08000338 	.word	0x08000338

0800031c <_init>:
 800031c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800031e:	bf00      	nop
 8000320:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000322:	bc08      	pop	{r3}
 8000324:	469e      	mov	lr, r3
 8000326:	4770      	bx	lr

08000328 <_fini>:
 8000328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800032a:	bf00      	nop
 800032c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800032e:	bc08      	pop	{r3}
 8000330:	469e      	mov	lr, r3
 8000332:	4770      	bx	lr
