
Making_Delay_Using_Systicks.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000190  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800033c  08000344  00010344  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800033c  0800033c  00010344  2**0
                  CONTENTS
  4 .ARM          00000000  0800033c  0800033c  00010344  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800033c  08000344  00010344  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800033c  0800033c  0001033c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000340  08000340  00010340  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010344  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010344  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00010344  2**0
                  CONTENTS, READONLY
 13 .debug_info   000003dd  00000000  00000000  0001036e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000108  00000000  00000000  0001074b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000050  00000000  00000000  00010858  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000038  00000000  00000000  000108a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001a279  00000000  00000000  000108e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000057b  00000000  00000000  0002ab59  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0009330c  00000000  00000000  0002b0d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000be3e0  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000080  00000000  00000000  000be430  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000000 	.word	0x20000000
 80001c8:	00000000 	.word	0x00000000
 80001cc:	08000324 	.word	0x08000324

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000004 	.word	0x20000004
 80001e8:	08000324 	.word	0x08000324

080001ec <main>:
#include "stm32f4xx.h"

void delayMs(int n);

int main(void) {
 80001ec:	b580      	push	{r7, lr}
 80001ee:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOGEN; /* enable GPIOG  clock */
 80001f0:	4b0d      	ldr	r3, [pc, #52]	; (8000228 <main+0x3c>)
 80001f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001f4:	4a0c      	ldr	r2, [pc, #48]	; (8000228 <main+0x3c>)
 80001f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80001fa:	6313      	str	r3, [r2, #48]	; 0x30

	GPIOG->MODER &= ~GPIO_MODER_MODE14; /* clear pin mode */
 80001fc:	4b0b      	ldr	r3, [pc, #44]	; (800022c <main+0x40>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	4a0a      	ldr	r2, [pc, #40]	; (800022c <main+0x40>)
 8000202:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8000206:	6013      	str	r3, [r2, #0]

	GPIOG->MODER |= GPIO_MODER_MODE14_0; /* set pin to output mode */
 8000208:	4b08      	ldr	r3, [pc, #32]	; (800022c <main+0x40>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a07      	ldr	r2, [pc, #28]	; (800022c <main+0x40>)
 800020e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000212:	6013      	str	r3, [r2, #0]

	while (1) {
		delayMs(100); 				/* delay 1000 ms */
 8000214:	2064      	movs	r0, #100	; 0x64
 8000216:	f000 f80b 	bl	8000230 <delayMs>
		GPIOG->ODR ^=  (1 << 14); 	/*toggle red LED */
 800021a:	4b04      	ldr	r3, [pc, #16]	; (800022c <main+0x40>)
 800021c:	695b      	ldr	r3, [r3, #20]
 800021e:	4a03      	ldr	r2, [pc, #12]	; (800022c <main+0x40>)
 8000220:	f483 4380 	eor.w	r3, r3, #16384	; 0x4000
 8000224:	6153      	str	r3, [r2, #20]
		delayMs(100); 				/* delay 1000 ms */
 8000226:	e7f5      	b.n	8000214 <main+0x28>
 8000228:	40023800 	.word	0x40023800
 800022c:	40021800 	.word	0x40021800

08000230 <delayMs>:
	}
}
void delayMs(int n) {
 8000230:	b480      	push	{r7}
 8000232:	b085      	sub	sp, #20
 8000234:	af00      	add	r7, sp, #0
 8000236:	6078      	str	r0, [r7, #4]
	int i;
	/* Configure SysTick */
	SysTick->LOAD = 16000; /* reload with number of clocks permillisecond */
 8000238:	4b12      	ldr	r3, [pc, #72]	; (8000284 <delayMs+0x54>)
 800023a:	f44f 527a 	mov.w	r2, #16000	; 0x3e80
 800023e:	605a      	str	r2, [r3, #4]

	SysTick->VAL = 0; /* clear current value register */
 8000240:	4b10      	ldr	r3, [pc, #64]	; (8000284 <delayMs+0x54>)
 8000242:	2200      	movs	r2, #0
 8000244:	609a      	str	r2, [r3, #8]

	SysTick->CTRL |= SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk; /* Enable the timer */
 8000246:	4b0f      	ldr	r3, [pc, #60]	; (8000284 <delayMs+0x54>)
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	4a0e      	ldr	r2, [pc, #56]	; (8000284 <delayMs+0x54>)
 800024c:	f043 0305 	orr.w	r3, r3, #5
 8000250:	6013      	str	r3, [r2, #0]

	for (i = 0; i < n; i++) {
 8000252:	2300      	movs	r3, #0
 8000254:	60fb      	str	r3, [r7, #12]
 8000256:	e009      	b.n	800026c <delayMs+0x3c>
		while ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk ) == 0) /* wait until the COUNTFLAG is set */
 8000258:	bf00      	nop
 800025a:	4b0a      	ldr	r3, [pc, #40]	; (8000284 <delayMs+0x54>)
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8000262:	2b00      	cmp	r3, #0
 8000264:	d0f9      	beq.n	800025a <delayMs+0x2a>
	for (i = 0; i < n; i++) {
 8000266:	68fb      	ldr	r3, [r7, #12]
 8000268:	3301      	adds	r3, #1
 800026a:	60fb      	str	r3, [r7, #12]
 800026c:	68fa      	ldr	r2, [r7, #12]
 800026e:	687b      	ldr	r3, [r7, #4]
 8000270:	429a      	cmp	r2, r3
 8000272:	dbf1      	blt.n	8000258 <delayMs+0x28>
		{
		}
	}
	SysTick->CTRL = 0; /* Stop the timer (Enable = 0) */
 8000274:	4b03      	ldr	r3, [pc, #12]	; (8000284 <delayMs+0x54>)
 8000276:	2200      	movs	r2, #0
 8000278:	601a      	str	r2, [r3, #0]
}
 800027a:	bf00      	nop
 800027c:	3714      	adds	r7, #20
 800027e:	46bd      	mov	sp, r7
 8000280:	bc80      	pop	{r7}
 8000282:	4770      	bx	lr
 8000284:	e000e010 	.word	0xe000e010

08000288 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000288:	480d      	ldr	r0, [pc, #52]	; (80002c0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800028a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800028c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000290:	480c      	ldr	r0, [pc, #48]	; (80002c4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000292:	490d      	ldr	r1, [pc, #52]	; (80002c8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000294:	4a0d      	ldr	r2, [pc, #52]	; (80002cc <LoopForever+0xe>)
  movs r3, #0
 8000296:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000298:	e002      	b.n	80002a0 <LoopCopyDataInit>

0800029a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800029a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800029c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800029e:	3304      	adds	r3, #4

080002a0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002a0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002a2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002a4:	d3f9      	bcc.n	800029a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002a6:	4a0a      	ldr	r2, [pc, #40]	; (80002d0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002a8:	4c0a      	ldr	r4, [pc, #40]	; (80002d4 <LoopForever+0x16>)
  movs r3, #0
 80002aa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002ac:	e001      	b.n	80002b2 <LoopFillZerobss>

080002ae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002b0:	3204      	adds	r2, #4

080002b2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002b2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002b4:	d3fb      	bcc.n	80002ae <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002b6:	f000 f811 	bl	80002dc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ba:	f7ff ff97 	bl	80001ec <main>

080002be <LoopForever>:

LoopForever:
  b LoopForever
 80002be:	e7fe      	b.n	80002be <LoopForever>
  ldr   r0, =_estack
 80002c0:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80002c4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002c8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002cc:	08000344 	.word	0x08000344
  ldr r2, =_sbss
 80002d0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002d4:	2000001c 	.word	0x2000001c

080002d8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002d8:	e7fe      	b.n	80002d8 <ADC_IRQHandler>
	...

080002dc <__libc_init_array>:
 80002dc:	b570      	push	{r4, r5, r6, lr}
 80002de:	4d0d      	ldr	r5, [pc, #52]	; (8000314 <__libc_init_array+0x38>)
 80002e0:	4c0d      	ldr	r4, [pc, #52]	; (8000318 <__libc_init_array+0x3c>)
 80002e2:	1b64      	subs	r4, r4, r5
 80002e4:	10a4      	asrs	r4, r4, #2
 80002e6:	2600      	movs	r6, #0
 80002e8:	42a6      	cmp	r6, r4
 80002ea:	d109      	bne.n	8000300 <__libc_init_array+0x24>
 80002ec:	4d0b      	ldr	r5, [pc, #44]	; (800031c <__libc_init_array+0x40>)
 80002ee:	4c0c      	ldr	r4, [pc, #48]	; (8000320 <__libc_init_array+0x44>)
 80002f0:	f000 f818 	bl	8000324 <_init>
 80002f4:	1b64      	subs	r4, r4, r5
 80002f6:	10a4      	asrs	r4, r4, #2
 80002f8:	2600      	movs	r6, #0
 80002fa:	42a6      	cmp	r6, r4
 80002fc:	d105      	bne.n	800030a <__libc_init_array+0x2e>
 80002fe:	bd70      	pop	{r4, r5, r6, pc}
 8000300:	f855 3b04 	ldr.w	r3, [r5], #4
 8000304:	4798      	blx	r3
 8000306:	3601      	adds	r6, #1
 8000308:	e7ee      	b.n	80002e8 <__libc_init_array+0xc>
 800030a:	f855 3b04 	ldr.w	r3, [r5], #4
 800030e:	4798      	blx	r3
 8000310:	3601      	adds	r6, #1
 8000312:	e7f2      	b.n	80002fa <__libc_init_array+0x1e>
 8000314:	0800033c 	.word	0x0800033c
 8000318:	0800033c 	.word	0x0800033c
 800031c:	0800033c 	.word	0x0800033c
 8000320:	08000340 	.word	0x08000340

08000324 <_init>:
 8000324:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000326:	bf00      	nop
 8000328:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800032a:	bc08      	pop	{r3}
 800032c:	469e      	mov	lr, r3
 800032e:	4770      	bx	lr

08000330 <_fini>:
 8000330:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000332:	bf00      	nop
 8000334:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000336:	bc08      	pop	{r3}
 8000338:	469e      	mov	lr, r3
 800033a:	4770      	bx	lr
