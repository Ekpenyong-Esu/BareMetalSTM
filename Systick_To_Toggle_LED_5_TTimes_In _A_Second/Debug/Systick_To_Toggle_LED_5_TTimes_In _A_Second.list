
Systick_To_Toggle_LED_5_TTimes_In _A_Second.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000160  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800030c  08000314  00010314  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800030c  0800030c  00010314  2**0
                  CONTENTS
  4 .ARM          00000000  0800030c  0800030c  00010314  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800030c  08000314  00010314  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800030c  0800030c  0001030c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000310  08000310  00010310  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010314  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010314  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00010314  2**0
                  CONTENTS, READONLY
 13 .debug_info   000003ac  00000000  00000000  0001033e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000ca  00000000  00000000  000106ea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  000107b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000030  00000000  00000000  00010800  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001a279  00000000  00000000  00010830  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000052f  00000000  00000000  0002aaa9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00093314  00000000  00000000  0002afd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000be2ec  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000054  00000000  00000000  000be33c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000000 	.word	0x20000000
 80001c8:	00000000 	.word	0x00000000
 80001cc:	080002f4 	.word	0x080002f4

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000004 	.word	0x20000004
 80001e8:	080002f4 	.word	0x080002f4

080001ec <main>:
#include "stm32f4xx.h"


int main(void) {
 80001ec:	b480      	push	{r7}
 80001ee:	af00      	add	r7, sp, #0

	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOGEN; /* enable GPIOA clock */
 80001f0:	4b15      	ldr	r3, [pc, #84]	; (8000248 <main+0x5c>)
 80001f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001f4:	4a14      	ldr	r2, [pc, #80]	; (8000248 <main+0x5c>)
 80001f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80001fa:	6313      	str	r3, [r2, #48]	; 0x30

	GPIOG->MODER &= ~GPIO_MODER_MODE13; /* clear pin mode */
 80001fc:	4b13      	ldr	r3, [pc, #76]	; (800024c <main+0x60>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	4a12      	ldr	r2, [pc, #72]	; (800024c <main+0x60>)
 8000202:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8000206:	6013      	str	r3, [r2, #0]

	GPIOG->MODER |= GPIO_MODER_MODE13_0; /* set pin to output mode *//*Configure SysTick */
 8000208:	4b10      	ldr	r3, [pc, #64]	; (800024c <main+0x60>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a0f      	ldr	r2, [pc, #60]	; (800024c <main+0x60>)
 800020e:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000212:	6013      	str	r3, [r2, #0]

	SysTick->LOAD = 3200000 - 1; /* reload with number of clocks persecond */
 8000214:	4b0e      	ldr	r3, [pc, #56]	; (8000250 <main+0x64>)
 8000216:	4a0f      	ldr	r2, [pc, #60]	; (8000254 <main+0x68>)
 8000218:	605a      	str	r2, [r3, #4]

	SysTick->VAL = 0;  // clear the current register value
 800021a:	4b0d      	ldr	r3, [pc, #52]	; (8000250 <main+0x64>)
 800021c:	2200      	movs	r2, #0
 800021e:	609a      	str	r2, [r3, #8]

	SysTick->CTRL |= SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk; /* enable it, no interrupt, use system clock */
 8000220:	4b0b      	ldr	r3, [pc, #44]	; (8000250 <main+0x64>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a0a      	ldr	r2, [pc, #40]	; (8000250 <main+0x64>)
 8000226:	f043 0305 	orr.w	r3, r3, #5
 800022a:	6013      	str	r3, [r2, #0]

	while (1) {
		if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) { /* if COUNT flag is set */
 800022c:	4b08      	ldr	r3, [pc, #32]	; (8000250 <main+0x64>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8000234:	2b00      	cmp	r3, #0
 8000236:	d0f9      	beq.n	800022c <main+0x40>
			GPIOG->ODR ^= (1 << 13); /* toggle green LED */
 8000238:	4b04      	ldr	r3, [pc, #16]	; (800024c <main+0x60>)
 800023a:	695b      	ldr	r3, [r3, #20]
 800023c:	4a03      	ldr	r2, [pc, #12]	; (800024c <main+0x60>)
 800023e:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8000242:	6153      	str	r3, [r2, #20]
		if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) { /* if COUNT flag is set */
 8000244:	e7f2      	b.n	800022c <main+0x40>
 8000246:	bf00      	nop
 8000248:	40023800 	.word	0x40023800
 800024c:	40021800 	.word	0x40021800
 8000250:	e000e010 	.word	0xe000e010
 8000254:	0030d3ff 	.word	0x0030d3ff

08000258 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000258:	480d      	ldr	r0, [pc, #52]	; (8000290 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800025a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800025c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000260:	480c      	ldr	r0, [pc, #48]	; (8000294 <LoopForever+0x6>)
  ldr r1, =_edata
 8000262:	490d      	ldr	r1, [pc, #52]	; (8000298 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000264:	4a0d      	ldr	r2, [pc, #52]	; (800029c <LoopForever+0xe>)
  movs r3, #0
 8000266:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000268:	e002      	b.n	8000270 <LoopCopyDataInit>

0800026a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800026a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800026c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800026e:	3304      	adds	r3, #4

08000270 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000270:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000272:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000274:	d3f9      	bcc.n	800026a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000276:	4a0a      	ldr	r2, [pc, #40]	; (80002a0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000278:	4c0a      	ldr	r4, [pc, #40]	; (80002a4 <LoopForever+0x16>)
  movs r3, #0
 800027a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800027c:	e001      	b.n	8000282 <LoopFillZerobss>

0800027e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800027e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000280:	3204      	adds	r2, #4

08000282 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000282:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000284:	d3fb      	bcc.n	800027e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000286:	f000 f811 	bl	80002ac <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800028a:	f7ff ffaf 	bl	80001ec <main>

0800028e <LoopForever>:

LoopForever:
  b LoopForever
 800028e:	e7fe      	b.n	800028e <LoopForever>
  ldr   r0, =_estack
 8000290:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000294:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000298:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800029c:	08000314 	.word	0x08000314
  ldr r2, =_sbss
 80002a0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002a4:	2000001c 	.word	0x2000001c

080002a8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a8:	e7fe      	b.n	80002a8 <ADC_IRQHandler>
	...

080002ac <__libc_init_array>:
 80002ac:	b570      	push	{r4, r5, r6, lr}
 80002ae:	4d0d      	ldr	r5, [pc, #52]	; (80002e4 <__libc_init_array+0x38>)
 80002b0:	4c0d      	ldr	r4, [pc, #52]	; (80002e8 <__libc_init_array+0x3c>)
 80002b2:	1b64      	subs	r4, r4, r5
 80002b4:	10a4      	asrs	r4, r4, #2
 80002b6:	2600      	movs	r6, #0
 80002b8:	42a6      	cmp	r6, r4
 80002ba:	d109      	bne.n	80002d0 <__libc_init_array+0x24>
 80002bc:	4d0b      	ldr	r5, [pc, #44]	; (80002ec <__libc_init_array+0x40>)
 80002be:	4c0c      	ldr	r4, [pc, #48]	; (80002f0 <__libc_init_array+0x44>)
 80002c0:	f000 f818 	bl	80002f4 <_init>
 80002c4:	1b64      	subs	r4, r4, r5
 80002c6:	10a4      	asrs	r4, r4, #2
 80002c8:	2600      	movs	r6, #0
 80002ca:	42a6      	cmp	r6, r4
 80002cc:	d105      	bne.n	80002da <__libc_init_array+0x2e>
 80002ce:	bd70      	pop	{r4, r5, r6, pc}
 80002d0:	f855 3b04 	ldr.w	r3, [r5], #4
 80002d4:	4798      	blx	r3
 80002d6:	3601      	adds	r6, #1
 80002d8:	e7ee      	b.n	80002b8 <__libc_init_array+0xc>
 80002da:	f855 3b04 	ldr.w	r3, [r5], #4
 80002de:	4798      	blx	r3
 80002e0:	3601      	adds	r6, #1
 80002e2:	e7f2      	b.n	80002ca <__libc_init_array+0x1e>
 80002e4:	0800030c 	.word	0x0800030c
 80002e8:	0800030c 	.word	0x0800030c
 80002ec:	0800030c 	.word	0x0800030c
 80002f0:	08000310 	.word	0x08000310

080002f4 <_init>:
 80002f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002f6:	bf00      	nop
 80002f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002fa:	bc08      	pop	{r3}
 80002fc:	469e      	mov	lr, r3
 80002fe:	4770      	bx	lr

08000300 <_fini>:
 8000300:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000302:	bf00      	nop
 8000304:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000306:	bc08      	pop	{r3}
 8000308:	469e      	mov	lr, r3
 800030a:	4770      	bx	lr
