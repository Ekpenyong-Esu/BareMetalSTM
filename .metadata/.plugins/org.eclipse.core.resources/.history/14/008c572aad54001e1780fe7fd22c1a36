#include <math.h>
#include "stm32f4xx.h"

#define TABLE_SIZE 256
#define DAC_RES 12

uint16_t sine_table[TABLE_SIZE];

void generate_sine_table() {
    for (int i = 0; i < TABLE_SIZE; i++) {
        sine_table[i] = (uint16_t)(2047 * sin(2 * M_PI * i / TABLE_SIZE));
    }
}

void init_dac() {
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
    GPIOA->MODER |= (3 << 2 * 4); // PA4 to analog mode

    RCC->APB1ENR |= RCC_APB1ENR_DACEN;

    DAC->CR |= DAC_CR_EN1; // Enable DAC1
    DAC->CR |= DAC_CR_TEN1; // Enable trigger
    DAC->CR |= DAC_CR_TSEL1_2; // Select software trigger
    DAC->DHR12R1 = 0; // Init to 0V
}

int main() {
    // Initialize sine table
    generate_sine_table();

    // Initialize DAC
    init_dac();

    // Loop forever
    while (1) {
        static uint16_t index = 0;
        index = (index + 1) % TABLE_SIZE;
        DAC->DHR12R1 = sine_table[index]; // Output value
        delayMs(1); // Delay for 1 millisecond
    }
}

void delayMs(int n) {
    int i;
    for (; n > 0; n--) {
        for (i = 0; i < 3195; i++);
    }
}
