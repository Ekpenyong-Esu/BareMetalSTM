/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

/* p2_2.c Toggle Green LED (LD2) on STM32F446RE Nucleo64 board at 1 Hz
 *
 * This program toggles LD2 for 0.5 second ON and 0.5 second OFF
 * by writing a '1' to bit 5 or bit 21 of the Bit Set/Reset
 * Register (BSRR). The lower 16 bits of BSRR turns on the pins
 * and the upper 16 bits of BSRR turns off the pins.
 * Writing a '1' to bit 5 turns on pin 5. Writing a '1' to
 * bit 21 (5 + 16) turns off pin 5.
 * The green LED (LD2) is connected to PA5.
 * The LED is high active (a '1' turns on the LED).
 * The default system clock is running at 16 MHz.
 *
 * This program was tested with Keil uVision v5.24a with DFP v2.11.0
 */

#include "main.h"

void delayMs(uint16_t n);



int main(void) {
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOGEN;      // enable GPIOG clock 0x1UL << 6U
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;	// enable clock for GPIOA 0x1UL << 1U

    GPIOA->MODER &=  ~(GPIO_MODER_MODE0);
    //GPIOA->PUPDR |= GPIO_PUPDR_PUPD0_0;

	GPIOG->MODER &= ~(GPIO_MODER_MODE14);    // 0x3UL << 28U
	GPIOG->MODER |=  GPIO_MODER_MODE14_0;    // set pin to output mode 0x1UL << 28U


    while(1) {
    	if (GPIOA->IDR & GPIO_IDR_ID0)
    	{
        GPIOG->BSRR = GPIO_BSRR_BS14;   // turn on LED 0x1UL << 14U
        //delayMs(500);
    	}
    	else {
        GPIOG->BSRR = GPIO_BSRR_BR14_Msk;   // turn off LED 0x1UL << 30U
        //delayMs(500);
    	}
    }
}

