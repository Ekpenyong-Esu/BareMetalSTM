#include <math.h>
#include "stm32f4xx.h"

void delayMs(int n) ;

#define TABLE_SIZE 256
#define DAC_RES 12

uint16_t sine_table[TABLE_SIZE];

void generate_sine_table() {
	for (int i = 0; i < TABLE_SIZE; i++) {
		sine_table[i] = (uint16_t)(2047 * sin(2 * M_PI * i / TABLE_SIZE));
	}
}

void init_dac() {
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
	GPIOA->MODER |= (3 << 2 * 4); // PA4 to analog mode

	RCC->APB1ENR |= RCC_APB1ENR_DACEN;

	// Set the DAC channel 1 trigger to software trigger
	DAC->CR &= ~DAC_CR_TEN1;
	DAC->CR &= ~DAC_CR_TSEL1;

	// Enable DAC channel 1
	DAC->CR |= DAC_CR_EN1;


	int main()
	{
		// Initialize sine table
		generate_sine_table();

		// Initialize DAC
		init_dac();

		// Loop forever
		while (1) {


			static uint16_t index = 0;
			index = (index + 1) % TABLE_SIZE;
			DAC->DHR12R1 = sine_table[index]; // Output value
			// Trigger DAC channel 1 which is the default pattern
			DAC->SWTRIGR |= DAC_SWTRIGR_SWTRIG1;
			delayMs(1); // Delay for 1 millisecond
		}
}

void delayMs(int n) {
		int i;
		for (; n > 0; n--) {
			for (i = 0; i < 3195; i++);
		}
}
